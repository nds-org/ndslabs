
swagger: '2.0'

info:
  title: NDS Labs API
  version: "0.0"
  
basePath: /v0
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
  
parameters:
  service-id:
    name: service-id
    in: path
    description: The unique service identifier
    type: number
    required: true
  project-id:
    name: project-id
    in: path
    description: The unique project identifier
    type: number
    required: true    
  instance-id:
    name: instance-id
    in: path
    description: The unique service instance identifier
    type: number
    required: true    


paths:
  /services:
    get:
      description: |
        Global list of available NDSLabs services. These are logical
        services that relate to one or more Kubernetes service definition.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items: 
                  $ref: '#/definitions/Service'
                  
  /services/{service-id}:
    parameters: 
      - $ref: '#/parameters/service-id'
    get: 
      description: Basic information about a global service.
      responses:
        200:
          description: The service object
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Service'
                
                
  /projects:
    get:
       description: | 
         Global list of NDSLabs projects.
       responses:
         200:
           description: OK
           schema:
             type: object
             properties:
               data:
                 type: array
                 items:
                   $ref: '#/definitions/Project'


  /projects/{project-id}:
    parameters: 
      - $ref: '#/parameters/project-id'
    get: 
      description: Basic information about a project.
      responses:
        200:
          description: The project object
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Project'
      

  /projects/{project-id}/serviceInstances:
    parameters: 
      - $ref: '#/parameters/project-id'
    get: 
      description: List of services configured for this project.
      responses:
        200:
          description: The project object
          schema:
             type: object
             properties:
               data:
                 type: array
                 items:
                   $ref: '#/definitions/ServiceInstance' 
    post:
      description: Add service instance
      parameters:
        - name: service
          in: body
          description: ID of service to add
          schema:
            type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: number                   
                   
  /projects/{project-id}/serviceInstances/{instance-id}:
    parameters: 
      - $ref: '#/parameters/project-id'  
      - $ref: '#/parameters/instance-id'  
    delete:
      description: Delete a service instance
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: number

definitions:
  Project:
    type: object
    properties:
      id:
        type: integer
      name: 
        type: string
      description:
        type: string
      contact:
        type: object
        properties:
          name: 
            type: string
          email:
            type: string
      quotas:
        type: object
        properties:
           cpus:
             type: integer
  Service:
    type: object
    properties: 
      uid:          # Unique identifier
        type: integer 
      name:         # Display name (e.g., MongoDB)
        type: string
      key:          # Short name (e.g., mongodb)
        type: string 
      description:
        type: string
      standalone:   # Can standalone
        type: boolean
      persistent:   # Requires storage/volume
        type: boolean
      template:
        type: string
      links:
        type: object
        properties:
          required:
            type: array
            items: 
              type: string
          optional:
            type: array
            items: 
              type: string
  ServiceInstance:
    type: object
    properties: 
      id:
        type: integer
      service:
        $ref: '#/definitions/Service'
      creationTimestamp:
        type: integer
      replicas:
        type: integer
      status:
        type: string
